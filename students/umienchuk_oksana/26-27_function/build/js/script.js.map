{"version":3,"file":"script.js","mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,SAASA,GAAGA,CAACC,CAAC,EAAE;EACZC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;EACd;EACA,IAAI,OAAOA,CAAC,KAAK,UAAU,EAAEA,CAAC,CAAC,YAAY,CAAC;AAChD;;AAEA;AACA;AACA;AACA;AACA;;AAGAC,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;AAExB,SAASC,KAAKA,CAAA,EAAG;EACb,OAAO,OAAO;AAClB;AAEA,SAASC,MAAMA,CAAA,EAAG;EACd,OAAO,OAAO;AAClB;AAEA,SAASC,MAAMA,CAACC,CAAC,EAAEC,CAAC,EAAE;EAClBN,OAAO,CAACC,GAAG,CAACI,CAAC,EAAEC,CAAC,CAAC;EACjB,IAAI,OAAOD,CAAC,KAAK,UAAU,IAAI,OAAOC,CAAC,KAAK,UAAU,EAAE,OAAOD,CAAC,CAAC,CAAC,GAAG,GAAG,GAAGC,CAAC,CAAC,CAAC;AAClF;AAGAN,OAAO,CAACC,GAAG,CAACG,MAAM,CAACF,KAAK,EAAEC,MAAM,CAAC,CAAC;;AAElC;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASI,GAAGA,CAACC,QAAQ,EAAE;EAEnB,OAAO,UAAUC,IAAI,EAAE;IACnB,OAAOA,IAAI,GAAG,GAAG,GAAGD,QAAQ;EAEhC,CAAC;AACL;AAEA,IAAME,GAAG,GAAGH,GAAG,CAAC,QAAQ,CAAC;AAEzBP,OAAO,CAACC,GAAG,CAACS,GAAG,CAAC,OAAO,CAAC,CAAC;AACzBV,OAAO,CAACC,GAAG,CAACS,GAAG,CAAC,KAAK,CAAC,CAAC;AACvBV,OAAO,CAACC,GAAG,CAACS,GAAG,CAAC,OAAO,CAAC,CAAC;AAEzB,IAAMC,KAAK,GAAGJ,GAAG,CAAC,MAAM,CAAC;AACzBP,OAAO,CAACC,GAAG,CAACU,KAAK,CAAC,OAAO,CAAC,CAAC;AAC3BX,OAAO,CAACC,GAAG,CAACU,KAAK,CAAC,MAAM,CAAC,CAAC,C","sources":["webpack://gulp_webpack/./src/js/script.js"],"sourcesContent":["// function bar(message, type) {\r\n//     // if (isShow) console.log(message);\r\n//     switch (type) {\r\n//         case 'log':\r\n//             console.log(message);\r\n//             break;\r\n//         case 'error':\r\n//             console.log(message);\r\n//             break;\r\n//         case 'info':\r\n//             console.log(message, 'info');\r\n//             break;\r\n//     }\r\n// }\r\n\r\n\r\n// bar('Hello', 'log');\r\n// bar('Oksana', 'error');\r\n// bar('dvv', 'info');\r\n// if (confirm()) {\r\n//     bar();\r\n// }\r\n\r\n// function sum(a, b) {\r\n//     console.log(a + b);\r\n// }\r\n\r\n// sum(3, 5);\r\n\r\n// foo(100);\r\n\r\n// function foo(num = 1) {\r\n\r\n//     // const trueNum = num || 1;\r\n//     // const trueNum = num ?? 1;\r\n\r\n//     console.log(num * num);\r\n// }\r\n\r\n// foo();\r\n// foo(5);\r\n// foo(10);\r\n\r\n// {\r\n//     function ddd() {\r\n//         alert(222);\r\n//     }\r\n//     // ddd()\r\n// }\r\n// ddd()\r\n\r\n// function nameUser(firstName, lastName, znak = '!') {\r\n//     console.log('Hello' + ' ' + firstName + ' ' + lastName + znak);\r\n// }\r\n\r\n// nameUser('Oksana', 'Umenchuk', '.')\r\n// nameUser('Sasha', 'Neborak')\r\n\r\n\r\n// function sum(a, b) {\r\n//     if (typeof a !== 'number' || typeof b !== 'number') return;\r\n\r\n//     return a + b;\r\n// }\r\n\r\n// const ss = sum('s', 2);\r\n// const sss = sum(5, 2);\r\n// console.log(ss, sss);\r\n\r\n// const aaa = sum(sum(1, 2), sum(2, 2));\r\n// console.log(aaa);\r\n\r\n\r\n// function sum(x, y) {\r\n//     return x + y;\r\n// }\r\n\r\n// function sub(x, y) {\r\n//     return x - y;\r\n// }\r\n\r\n// function add(x, y) {\r\n//     return x * y;\r\n// }\r\n\r\n// function div(x, y) {\r\n//     return x / y;\r\n// }\r\n\r\n//\r\n/**\r\n * Function calc\r\n * @param {number} x\r\n * @param {number} y\r\n * @param {string} symbol\r\n * @returns {number}\r\n */\r\n\r\n// function calc(x, y, symbol = '+') {\r\n\r\n//     switch (symbol) {\r\n//         case '+':\r\n//             return sum(x, y);\r\n//         case '-':\r\n//             return sub(x, y);\r\n//         case '*':\r\n//             return add(x, y);\r\n//         case '/':\r\n//             return div(x, y);\r\n//     }\r\n// }\r\n\r\n// calc()\r\n\r\n// const m = calc(15, 5, '-');\r\n// console.log(m);\r\n\r\n// function ddss(a, b, ...other) {\r\n//     console.log(arguments);\r\n//     console.log(other);\r\n//     //sum2(2, 2);\r\n//     return;\r\n// }\r\n\r\n// console.log(ddss(1, 1, 1, 1, 1, 1, 1));\r\n\r\n//////////\r\n\r\n// const sum2 = function (a, b) {\r\n//     return a + b;\r\n// }\r\n// console.log(sum2(2, 4));\r\n// console.log(sum2(5, 5));\r\n\r\n\r\n// const sum3 = (a, b) => {\r\n//     return a + b;\r\n// }\r\n\r\n// const sum4 = (a, b) => a + b;\r\n\r\n// const pow = a => a * a;\r\n\r\n// const aaa = () => console.log(111);\r\n\r\n// ======================================================\r\n\r\n// function message(text) {\r\n//     console.log(text);\r\n//     // return text + '!';\r\n// }\r\n\r\n// function test(text) {\r\n//     alert(text);\r\n//     // return text + '!';\r\n// }\r\n// message(11);\r\n\r\nfunction foo(f) {\r\n    console.log(f);\r\n    // (typeof f === 'function') && f('scscdvvvvv');\r\n    if (typeof f === 'function') f('scscdvvvvv');\r\n}\r\n\r\n// setTimeout(function () {\r\n//     foo(message);\r\n//     // foo(test);\r\n//     foo(1);\r\n// }, 1000);\r\n\r\n\r\nconsole.log(11111111111);\r\n\r\nfunction first() {\r\n    return 'Hello';\r\n}\r\n\r\nfunction second() {\r\n    return 'World';\r\n}\r\n\r\nfunction finStr(a, b) {\r\n    console.log(a, b);\r\n    if (typeof a === 'function' && typeof b === 'function') return a() + ' ' + b();\r\n}\r\n\r\n\r\nconsole.log(finStr(first, second));\r\n\r\n// foo(() => \"Hello\", () => \"World\");\r\n\r\n// function baz() {\r\n\r\n//     return function (text) {\r\n//         console.log(text);\r\n//     }\r\n// }\r\n\r\n// function baz() {\r\n//     let count = 0;\r\n\r\n//     return function () {\r\n//         return count++;\r\n//     };\r\n// }\r\n\r\n// const qqq = baz();\r\n\r\n// console.log(qqq());\r\n// console.log(qqq());\r\n// console.log(qqq());\r\n// console.log(qqq());\r\n// console.log(qqq());\r\n// console.log(qqq());\r\n\r\nfunction baz(userName) {\r\n\r\n    return function (text) {\r\n        return text + ' ' + userName;\r\n\r\n    };\r\n}\r\n\r\nconst ret = baz('Oksana');\r\n\r\nconsole.log(ret('Hello'));\r\nconsole.log(ret('Buy'));\r\nconsole.log(ret('Hello'));\r\n\r\nconst seton = baz('Ivan');\r\nconsole.log(seton('Hello'));\r\nconsole.log(seton('Good'));\r\n"],"names":["foo","f","console","log","first","second","finStr","a","b","baz","userName","text","ret","seton"],"sourceRoot":""}