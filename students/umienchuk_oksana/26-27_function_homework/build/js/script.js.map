{"version":3,"file":"script.js","mappings":"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","sources":["webpack://gulp_webpack/./src/js/script.js"],"sourcesContent":["//Мінімум\r\n\r\n//Напиши всі можливі варіанти створення функцій.\r\n// Function Declaration\r\n// Function Expression\r\n// стрілкові функції”\r\n\r\n// Створи функцію, яка буде виводити кількість переданих їй аргументів.\r\n\r\nfunction funcLength() {\r\n    console.log(arguments.length);\r\n}\r\n\r\nfuncLength(1);\r\nfuncLength(1, 2);\r\nfuncLength(2, 3, 4, 5);\r\n\r\n// Напиши функцію, яка приймає 2 числа і повертає :\r\n// -1, якщо перше число менше, ніж друге;\r\n// 1 - якщо перше число більше, ніж друге;\r\n// 0 - якщо числа рівні.\r\n\r\nfunction numReturn(x, y) {\r\n    if (x < y) {\r\n        return -1;\r\n    } else if (x > y) {\r\n        return 1;\r\n    } else {\r\n        return 0;\r\n    }\r\n}\r\n\r\nconsole.log(numReturn(100, 25));\r\n\r\n// Напиши функцію, яка обчислює факторіал переданого їй числа.\r\nfunction numFactorial(n) {\r\n    let facktorial = n;\r\n    for (i = 1; n > i; i++) {\r\n        facktorial = facktorial * (n - i);\r\n    }\r\n    return facktorial;\r\n};\r\nconsole.log(numFactorial(5));\r\n\r\n// Напиши функцію, яка приймає три окремі цифри і перетворює їх в одне число. Наприклад: цифри 1, 4, 9 перетворяться в число 149.\r\nfunction combiningInString(firstNum, secondNum, thirdNum) {\r\n    let totalNumber = firstNum * 100 + secondNum * 10 + thirdNum;\r\n    return totalNumber;\r\n}\r\n\r\nconsole.log(combiningInString(5, 9, 7))\r\n\r\n\r\n// Напиши функцію, яка приймає довжину і ширину прямокутника і обчислює його площу. Якщо в функцію передали 1 параметр, то вона обчислює площу квадрата.\r\n\r\nfunction calcArea(sideFirst, sideSecond) {\r\n    if (arguments.length === 2) {\r\n        return sideFirst * sideSecond;\r\n    } else if (arguments.length === 1) {\r\n        return sideFirst * sideFirst;\r\n    } else {\r\n        return \"Error\";\r\n    }\r\n}\r\n\r\nconsole.log(calcArea(6, 2, 3))\r\n\r\nfunction func1(sideFirst, sideSecond) {\r\n    if (sideSecond == undefined) {\r\n        return sideFirst * sideFirst;\r\n    } else {\r\n        return sideFirst * sideSecond;\r\n    }\r\n}\r\nconsole.log(func1(7, 3))\r\n\r\n\r\n// Норма\r\n\r\n// Напиши функцію, яка перевіряє, чи є передане їй число “досконалим числом”. Досконале число - це число, яке дорівнює сумі всіх своїх дільників.\r\nfunction numPerfect(z) {\r\n    let sumPerfect = 0;\r\n    for (let j = 1; j < z; j++) {\r\n        if (z % j === 0) {\r\n            sumPerfect = sumPerfect + j;\r\n        }\r\n    }\r\n\r\n    // sumPerfect === z ? console.log('Число ' + z + ' досконале') : console.log('Число ' + z + ' не досконале')\r\n    return sumPerfect === z;\r\n}\r\n\r\nconsole.log(numPerfect(6))\r\n\r\n// Напиши функцію, яка приймає мінімальне і максимальне значення для діапазону, і виводить тільки ті числа з діапазону, які є досконалими. Використовуй написану раніше функцію, щоб дізнатися, чи є це число досконалим.\r\n\r\nfunction findPerf(a, b) {\r\n    let min = (a > b) ? b : a;\r\n    let max = (a < b) ? b : a;\r\n    console.log('Min: ' + min);\r\n    console.log('Max: ' + max);\r\n\r\n    for (let p = min; p <= max; p++) {\r\n        if (numPerfect(p)) {\r\n            console.log('Число ' + p + ' досконале');\r\n        }\r\n    }\r\n\r\n    return p;\r\n}\r\n\r\n\r\nconsole.log(findPerf(30, 6))\r\n"],"names":["funcLength","console","log","arguments","length","numReturn","x","y","numFactorial","n","facktorial","i","combiningInString","firstNum","secondNum","thirdNum","totalNumber","calcArea","sideFirst","sideSecond","func1","undefined","numPerfect","z","sumPerfect","j","findPerf","a","b","min","max","p"],"sourceRoot":""}